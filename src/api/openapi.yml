openapi: 3.0.0
info:
  description: Server access - Test
  version: 1.0.0
  title: Test API
  contact:
    email: tes@test.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: TestOperation
    description: Operations related to the TestOperation process
paths:
  /test:
    post:
      tags:
        - Test
      summary: Specific Post Test Operation
      operationId: postTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestPostBody"
        required: true
      responses:
        200:
          description: Correctly logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestGetResponse"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthenticated"
    get:
      tags:
        - Test
      summary: Specific Get Test Operation
      operationId: getTest
      parameters: 
        - $ref: "#/components/parameters/idToken"
      responses:
        200:
          description: The list of practices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestGetResponse"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthenticated"
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorData"
    Unauthenticated:
      description: You are not authenticated
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorData"
    Unauthorized:
      description: You are authenticated but not authorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorData"
    BadRequest:
      description: The provided data are not acceptable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorData"
    Conflict:
      description: The provided data are in conflict with stored data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorData"
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorData"
  parameters:
    idToken:
      name: X-id-token
      in: header
      description: The id token
      required: true
      schema:
        type: string
    accessToken:
      name: X-access-token
      in: header
      description: The access token
      required: true
      schema:
        type: string
    offset:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
        default: 0
      required: false
      description: The number of items to be skipped.
    limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        default: 10
      required: false
      description: |
        The number of items to return.

        If not specified all the resulting 
        items will be returned.
    userType: 
      name: userType
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum: 
            - ARTISTS
            - EMERGING
            - LABELS
            - USERS
    refreshToken:
      name: X-refresh-token
      in: header
      description: The refresh token
      required: true
      schema:
        type: string
  schemas:
    ErrorData:
      type: object
      description: Informations regarding a backend error
      required:
        - description
        - errorCode
      properties:
        description:
          type: string
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
        inputId:
          type: string
    ErrorCode:
      type: string
      description: |
        4xx:
          - client-side errors;

        5xx:
          - server-side errors;
      enum:
        - 4xx_CONFLICT
        - 4xx_MALFORMED-INFORMATION
        - 4xx_USER-ALREADY-EXISTS
        - 4xx_USER-NOT-FOUND
        - 4xx_USER-NOT-AUTHENTICATED
        - 4xx_USER-NOT-AUTHORIZED
        - 4xx_USER-NOT-CONFIRMED
        - 4xx_GROUP-NAME-ALREADY-EXISTS
        - 4XX_INVALID-BAND-NAME
        - 4XX_INVALID-BIRTH-DATE
        - 4XX_INVALID-EMAIL
        - 4XX_INVALID-PHONE-NUMBER
        - 4xx_ITEM-NOT-FOUND
        - 4xx_UPDATE-CREDENTIALS_OLD-PASSWORD-WRONG
        - 4xx_TOO-MANY-REQUESTS
        - 4xx_PAYLOAD_TOO_LARGE
        - 5xx_INTERNAL-SERVER-ERROR
        - 5xx_NOT-IMPLEMENTED-ERROR
        - 5xx_ITEM-NOT-CREATED
        - 5xx_ITEM-NOT-UPDATED
        - 5xx_ITEM-NOT-DELETED
        - 5xx_ITEM-NOT-RETRIEVED
        - 5xx_ITEM-SEARCH-ERROR
        - 5xx_ITEM-RETURN-VALUES-MISSING
        - 5xx_USER-DATA-NOT-FOUND
        - 5xx_GET-PROFILE_USER-DATA-NOT-FOUND
        - 5xx_UPDATE-PROFILE_USER-DATA-NOT-FOUND
        - 5xx_START-CHARGE_CANNOT-START-CHARGE
        - 5xx_STOP-CHARGE_CANNOT-STOP-CHARGE
        - 5xx_AUTHENTICATION-FAILED
    TestPostBody:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          $ref: "#/components/schemas/Password"
    Password:
      type: string
      pattern: ^(?=.{8,16}$)(?=.*\d)(?=.*[\^\$*.[\]{}()?\-"!@#%&\/\\,><':;|_~`+=])((?=.*[a-z])(?=.*[A-Z])|(?=.*[a-z])(?=.*[A-Z])).*$
    TestGetResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: string
